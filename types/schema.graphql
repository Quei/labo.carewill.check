"""
Represents a binary file in a space. An asset can be any file type.
"""
type Asset {
  contentType: String
  contentfulMetadata: ContentfulMetadata!
  description: String
  fileName: String
  height: Int
  linkedFrom(allowedLocales: [String]): AssetLinkingCollections
  size: Int
  sys: Sys!
  title: String
  url(transform: ImageTransformOptions): String
  width: Int
}

type AssetCollection {
  items: [Asset]!
  limit: Int!
  skip: Int!
  total: Int!
}

input AssetFilter {
  AND: [AssetFilter]
  OR: [AssetFilter]
  contentType: String
  contentType_contains: String
  contentType_exists: Boolean
  contentType_in: [String]
  contentType_not: String
  contentType_not_contains: String
  contentType_not_in: [String]
  contentfulMetadata: ContentfulMetadataFilter
  description: String
  description_contains: String
  description_exists: Boolean
  description_in: [String]
  description_not: String
  description_not_contains: String
  description_not_in: [String]
  fileName: String
  fileName_contains: String
  fileName_exists: Boolean
  fileName_in: [String]
  fileName_not: String
  fileName_not_contains: String
  fileName_not_in: [String]
  height: Int
  height_exists: Boolean
  height_gt: Int
  height_gte: Int
  height_in: [Int]
  height_lt: Int
  height_lte: Int
  height_not: Int
  height_not_in: [Int]
  size: Int
  size_exists: Boolean
  size_gt: Int
  size_gte: Int
  size_in: [Int]
  size_lt: Int
  size_lte: Int
  size_not: Int
  size_not_in: [Int]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  url: String
  url_contains: String
  url_exists: Boolean
  url_in: [String]
  url_not: String
  url_not_contains: String
  url_not_in: [String]
  width: Int
  width_exists: Boolean
  width_gt: Int
  width_gte: Int
  width_in: [Int]
  width_lt: Int
  width_lte: Int
  width_not: Int
  width_not_in: [Int]
}

type AssetLinkingCollections {
  customOrderCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): CustomOrderCollection
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
  footerCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): FooterCollection
  hauteCoutureCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HauteCoutureCollection
  homeCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): HomeCollection
  productCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): ProductCollection
  staffNoteCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): StaffNoteCollection
}

enum AssetOrder {
  contentType_ASC
  contentType_DESC
  fileName_ASC
  fileName_DESC
  height_ASC
  height_DESC
  size_ASC
  size_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  url_ASC
  url_DESC
  width_ASC
  width_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/8z7mw5knx30w/content_types/category)
"""
type Category implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CategoryLinkingCollections
  slug(locale: String): String
  title(locale: String): String
  date(locale: String): DateTime
}

type CategoryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Category]!
}

input CategoryFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  date_exists: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime]
  date_not_in: [DateTime]
  date_gt: DateTime
  date_gte: DateTime
  date_lt: DateTime
  date_lte: DateTime
  OR: [CategoryFilter]
  AND: [CategoryFilter]
}

type CategoryLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
  staffNoteCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): StaffNoteCollection
}

enum CategoryOrder {
  slug_ASC
  slug_DESC
  title_ASC
  title_DESC
  date_ASC
  date_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type ContentfulMetadata {
  tags: [ContentfulTag]!
}

input ContentfulMetadataFilter {
  tags: ContentfulMetadataTagsFilter
  tags_exists: Boolean
}

input ContentfulMetadataTagsFilter {
  id_contains_all: [String]
  id_contains_none: [String]
  id_contains_some: [String]
}

"""
Represents a tag entity for finding and organizing content easily.
    Find out more here: https://www.contentful.com/developers/docs/references/content-delivery-api/#/reference/content-tags
"""
type ContentfulTag {
  id: String
  name: String
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/customOrder)
"""
type CustomOrder implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): CustomOrderLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  description(locale: String): CustomOrderDescription
  imageCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
  mobileImageCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
}

type CustomOrderCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [CustomOrder]!
}

type CustomOrderDescription {
  json: JSON!
  links: CustomOrderDescriptionLinks!
}

type CustomOrderDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type CustomOrderDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type CustomOrderDescriptionLinks {
  entries: CustomOrderDescriptionEntries!
  assets: CustomOrderDescriptionAssets!
}

input CustomOrderFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  description_exists: Boolean
  description_contains: String
  description_not_contains: String
  imageCollection_exists: Boolean
  mobileImageCollection_exists: Boolean
  OR: [CustomOrderFilter]
  AND: [CustomOrderFilter]
}

type CustomOrderLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

enum CustomOrderOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z,
    compliant with the 'date-time' format outlined in section 5.6 of
    the RFC 3339 profile of the ISO 8601 standard for representation
    of dates and times using the Gregorian calendar.
"""
scalar DateTime

"""
The 'Dimension' type represents dimensions as whole numeric values between `1` and `4000`.
"""
scalar Dimension

interface Entry {
  contentfulMetadata: ContentfulMetadata!
  sys: Sys!
}

type EntryCollection {
  items: [Entry]!
  limit: Int!
  skip: Int!
  total: Int!
}

input EntryFilter {
  AND: [EntryFilter]
  OR: [EntryFilter]
  contentfulMetadata: ContentfulMetadataFilter
  sys: SysFilter
}

enum EntryOrder {
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/footer)
"""
type Footer implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): FooterLinkingCollections
  slug(locale: String): String
  title(locale: String): String
  content(locale: String): String
  logoCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
}

type FooterCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Footer]!
}

input FooterFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  content_exists: Boolean
  content: String
  content_not: String
  content_in: [String]
  content_not_in: [String]
  content_contains: String
  content_not_contains: String
  logoCollection_exists: Boolean
  OR: [FooterFilter]
  AND: [FooterFilter]
}

type FooterLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

enum FooterOrder {
  slug_ASC
  slug_DESC
  title_ASC
  title_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/hauteCouture)
"""
type HauteCouture implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): HauteCoutureLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  description(locale: String): HauteCoutureDescription
  image(preview: Boolean, locale: String): Asset
  formTitle(locale: String): String
  formDescription(locale: String): HauteCoutureFormDescription
}

type HauteCoutureCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [HauteCouture]!
}

type HauteCoutureDescription {
  json: JSON!
  links: HauteCoutureDescriptionLinks!
}

type HauteCoutureDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HauteCoutureDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HauteCoutureDescriptionLinks {
  entries: HauteCoutureDescriptionEntries!
  assets: HauteCoutureDescriptionAssets!
}

input HauteCoutureFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  description_exists: Boolean
  description_contains: String
  description_not_contains: String
  image_exists: Boolean
  formTitle_exists: Boolean
  formTitle: String
  formTitle_not: String
  formTitle_in: [String]
  formTitle_not_in: [String]
  formTitle_contains: String
  formTitle_not_contains: String
  formDescription_exists: Boolean
  formDescription_contains: String
  formDescription_not_contains: String
  OR: [HauteCoutureFilter]
  AND: [HauteCoutureFilter]
}

type HauteCoutureFormDescription {
  json: JSON!
  links: HauteCoutureFormDescriptionLinks!
}

type HauteCoutureFormDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HauteCoutureFormDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HauteCoutureFormDescriptionLinks {
  entries: HauteCoutureFormDescriptionEntries!
  assets: HauteCoutureFormDescriptionAssets!
}

type HauteCoutureLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

enum HauteCoutureOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  formTitle_ASC
  formTitle_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'HexColor' type represents color in `rgb:ffffff` string format.
"""
scalar HexColor

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/home)
"""
type Home implements Entry {
  collaborationHomeDescription(locale: String): HomeCollaborationHomeDescription
  collaborationImage(preview: Boolean, locale: String): Asset
  contentfulMetadata: ContentfulMetadata!
  customOrderHomeDescription(locale: String): HomeCustomOrderHomeDescription
  customOrderImage(preview: Boolean, locale: String): Asset
  description(locale: String): HomeDescription
  endSlideCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
  hauteCoutureHomeDescription(locale: String): HomeHauteCoutureHomeDescription
  hauteCoutureImage(preview: Boolean, locale: String): Asset
  interviewHomeDescription(locale: String): HomeInterviewHomeDescription
  interviewImage(preview: Boolean, locale: String): Asset
  linkedFrom(allowedLocales: [String]): HomeLinkingCollections
  newsPickupCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HomeNewsPickupCollection
  productDescription(locale: String): HomeProductDescription
  productHomeDescription(locale: String): HomeProductHomeDescription
  productImage(preview: Boolean, locale: String): Asset
  recruitingDescription(locale: String): HomeRecruitingDescription
  recruitingHomeDescription(locale: String): HomeRecruitingHomeDescription
  recruitingImage(preview: Boolean, locale: String): Asset
  slug(locale: String): String
  staffNoteDescription(locale: String): HomeStaffNoteDescription
  staffNoteHomeDescription(locale: String): HomeStaffNoteHomeDescription
  sys: Sys!
  title(locale: String): String
  topSlideCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
}

type HomeCollaborationHomeDescription {
  json: JSON!
  links: HomeCollaborationHomeDescriptionLinks!
}

type HomeCollaborationHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeCollaborationHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeCollaborationHomeDescriptionLinks {
  entries: HomeCollaborationHomeDescriptionEntries!
  assets: HomeCollaborationHomeDescriptionAssets!
}

type HomeCollection {
  items: [Home]!
  limit: Int!
  skip: Int!
  total: Int!
}

type HomeCustomOrderHomeDescription {
  json: JSON!
  links: HomeCustomOrderHomeDescriptionLinks!
}

type HomeCustomOrderHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeCustomOrderHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeCustomOrderHomeDescriptionLinks {
  entries: HomeCustomOrderHomeDescriptionEntries!
  assets: HomeCustomOrderHomeDescriptionAssets!
}

type HomeDescription {
  json: JSON!
  links: HomeDescriptionLinks!
}

type HomeDescriptionAssets {
  block: [Asset]!
  hyperlink: [Asset]!
}

type HomeDescriptionEntries {
  block: [Entry]!
  hyperlink: [Entry]!
  inline: [Entry]!
}

type HomeDescriptionLinks {
  assets: HomeDescriptionAssets!
  entries: HomeDescriptionEntries!
}

input HomeFilter {
  AND: [HomeFilter]
  OR: [HomeFilter]
  collaborationHomeDescription_contains: String
  collaborationHomeDescription_exists: Boolean
  collaborationHomeDescription_not_contains: String
  collaborationImage_exists: Boolean
  contentfulMetadata: ContentfulMetadataFilter
  customOrderHomeDescription_contains: String
  customOrderHomeDescription_exists: Boolean
  customOrderHomeDescription_not_contains: String
  customOrderImage_exists: Boolean
  description_contains: String
  description_exists: Boolean
  description_not_contains: String
  endSlideCollection_exists: Boolean
  hauteCoutureHomeDescription_contains: String
  hauteCoutureHomeDescription_exists: Boolean
  hauteCoutureHomeDescription_not_contains: String
  hauteCoutureImage_exists: Boolean
  interviewHomeDescription_contains: String
  interviewHomeDescription_exists: Boolean
  interviewHomeDescription_not_contains: String
  interviewImage_exists: Boolean
  newsPickupCollection_exists: Boolean
  productDescription_contains: String
  productDescription_exists: Boolean
  productDescription_not_contains: String
  productHomeDescription_contains: String
  productHomeDescription_exists: Boolean
  productHomeDescription_not_contains: String
  productImage_exists: Boolean
  recruitingDescription_contains: String
  recruitingDescription_exists: Boolean
  recruitingDescription_not_contains: String
  recruitingHomeDescription_contains: String
  recruitingHomeDescription_exists: Boolean
  recruitingHomeDescription_not_contains: String
  recruitingImage_exists: Boolean
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  staffNoteDescription_contains: String
  staffNoteDescription_exists: Boolean
  staffNoteDescription_not_contains: String
  staffNoteHomeDescription_contains: String
  staffNoteHomeDescription_exists: Boolean
  staffNoteHomeDescription_not_contains: String
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
  topSlideCollection_exists: Boolean
}

type HomeHauteCoutureHomeDescription {
  json: JSON!
  links: HomeHauteCoutureHomeDescriptionLinks!
}

type HomeHauteCoutureHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeHauteCoutureHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeHauteCoutureHomeDescriptionLinks {
  entries: HomeHauteCoutureHomeDescriptionEntries!
  assets: HomeHauteCoutureHomeDescriptionAssets!
}

type HomeInterviewHomeDescription {
  json: JSON!
  links: HomeInterviewHomeDescriptionLinks!
}

type HomeInterviewHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeInterviewHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeInterviewHomeDescriptionLinks {
  entries: HomeInterviewHomeDescriptionEntries!
  assets: HomeInterviewHomeDescriptionAssets!
}

type HomeLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

type HomeNewsPickupCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [News]!
}

enum HomeOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

type HomeProductDescription {
  json: JSON!
  links: HomeProductDescriptionLinks!
}

type HomeProductDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeProductDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeProductDescriptionLinks {
  entries: HomeProductDescriptionEntries!
  assets: HomeProductDescriptionAssets!
}

type HomeProductHomeDescription {
  json: JSON!
  links: HomeProductHomeDescriptionLinks!
}

type HomeProductHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeProductHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeProductHomeDescriptionLinks {
  entries: HomeProductHomeDescriptionEntries!
  assets: HomeProductHomeDescriptionAssets!
}

type HomeRecruitingDescription {
  json: JSON!
  links: HomeRecruitingDescriptionLinks!
}

type HomeRecruitingDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeRecruitingDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeRecruitingDescriptionLinks {
  entries: HomeRecruitingDescriptionEntries!
  assets: HomeRecruitingDescriptionAssets!
}

type HomeRecruitingHomeDescription {
  json: JSON!
  links: HomeRecruitingHomeDescriptionLinks!
}

type HomeRecruitingHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeRecruitingHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeRecruitingHomeDescriptionLinks {
  entries: HomeRecruitingHomeDescriptionEntries!
  assets: HomeRecruitingHomeDescriptionAssets!
}

type HomeStaffNoteDescription {
  json: JSON!
  links: HomeStaffNoteDescriptionLinks!
}

type HomeStaffNoteDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeStaffNoteDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeStaffNoteDescriptionLinks {
  entries: HomeStaffNoteDescriptionEntries!
  assets: HomeStaffNoteDescriptionAssets!
}

type HomeStaffNoteHomeDescription {
  json: JSON!
  links: HomeStaffNoteHomeDescriptionLinks!
}

type HomeStaffNoteHomeDescriptionAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type HomeStaffNoteHomeDescriptionEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type HomeStaffNoteHomeDescriptionLinks {
  entries: HomeStaffNoteHomeDescriptionEntries!
  assets: HomeStaffNoteHomeDescriptionAssets!
}

enum ImageFormat {
  """
  JPG image format.
  """
  JPG

  """
  Progressive JPG format stores multiple passes of an image in progressively higher detail.
          When a progressive image is loading, the viewer will first see a lower quality pixelated version which
          will gradually improve in detail, until the image is fully downloaded. This is to display an image as
          early as possible to make the layout look as designed.
  """
  JPG_PROGRESSIVE

  """
  PNG image format
  """
  PNG

  """
  8-bit PNG images support up to 256 colors and weigh less than the standard 24-bit PNG equivalent.
          The 8-bit PNG format is mostly used for simple images, such as icons or logos.
  """
  PNG8

  """
  WebP image format.
  """
  WEBP
}

enum ImageResizeFocus {
  """
  Focus the resizing on the bottom.
  """
  BOTTOM

  """
  Focus the resizing on the bottom left.
  """
  BOTTOM_LEFT

  """
  Focus the resizing on the bottom right.
  """
  BOTTOM_RIGHT

  """
  Focus the resizing on the center.
  """
  CENTER

  """
  Focus the resizing on the largest face.
  """
  FACE

  """
  Focus the resizing on the area containing all the faces.
  """
  FACES

  """
  Focus the resizing on the left.
  """
  LEFT

  """
  Focus the resizing on the right.
  """
  RIGHT

  """
  Focus the resizing on the top.
  """
  TOP

  """
  Focus the resizing on the top left.
  """
  TOP_LEFT

  """
  Focus the resizing on the top right.
  """
  TOP_RIGHT
}

enum ImageResizeStrategy {
  """
  Crops a part of the original image to fit into the specified dimensions.
  """
  CROP

  """
  Resizes the image to the specified dimensions, cropping the image if needed.
  """
  FILL

  """
  Resizes the image to fit into the specified dimensions.
  """
  FIT

  """
  Resizes the image to the specified dimensions, padding the image if needed.
          Uses desired background color as padding color.
  """
  PAD

  """
  Resizes the image to the specified dimensions, changing the original aspect ratio if needed.
  """
  SCALE

  """
  Creates a thumbnail from the image.
  """
  THUMB
}

input ImageTransformOptions {
  """
  Desired background color, used with corner radius or `PAD` resize strategy.
          Defaults to transparent (for `PNG`, `PNG8` and `WEBP`) or white (for `JPG` and `JPG_PROGRESSIVE`).
  """
  backgroundColor: HexColor

  """
  Desired corner radius in pixels.
          Results in an image with rounded corners (pass `-1` for a full circle/ellipse).
          Defaults to `0`. Uses desired background color as padding color,
          unless the format is `JPG` or `JPG_PROGRESSIVE` and resize strategy is `PAD`, then defaults to white.
  """
  cornerRadius: Int

  """
  Desired image format. Defaults to the original image format.
  """
  format: ImageFormat

  """
  Desired height in pixels. Defaults to the original image height.
  """
  height: Dimension

  """
  Desired quality of the image in percents.
          Used for `PNG8`, `JPG`, `JPG_PROGRESSIVE` and `WEBP` formats.
  """
  quality: Quality

  """
  Desired resize focus area. Defaults to `CENTER`.
  """
  resizeFocus: ImageResizeFocus

  """
  Desired resize strategy. Defaults to `FIT`.
  """
  resizeStrategy: ImageResizeStrategy

  """
  Desired width in pixels. Defaults to the original image width.
  """
  width: Dimension
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/navigation)
"""
type Navigation implements Entry {
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NavigationLinkingCollections
  menu(locale: String): JSON
  slug(locale: String): String
  sns(locale: String): JSON
  sys: Sys!
  title(locale: String): String
}

type NavigationCollection {
  items: [Navigation]!
  limit: Int!
  skip: Int!
  total: Int!
}

input NavigationFilter {
  AND: [NavigationFilter]
  OR: [NavigationFilter]
  contentfulMetadata: ContentfulMetadataFilter
  slug: String
  slug_contains: String
  slug_exists: Boolean
  slug_in: [String]
  slug_not: String
  slug_not_contains: String
  slug_not_in: [String]
  sys: SysFilter
  title: String
  title_contains: String
  title_exists: Boolean
  title_in: [String]
  title_not: String
  title_not_contains: String
  title_not_in: [String]
}

type NavigationLinkingCollections {
  entryCollection(
    limit: Int = 100
    locale: String
    preview: Boolean
    skip: Int = 0
  ): EntryCollection
}

enum NavigationOrder {
  slug_ASC
  slug_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
  title_ASC
  title_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/bdipztv4q6kp/content_types/news)
"""
type News implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NewsLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  date(locale: String): DateTime
  category(preview: Boolean, locale: String): NewsCategory
  content(locale: String): NewsContent
}

"""
[See type definition](https://app.contentful.com/spaces/bdipztv4q6kp/content_types/newsCategory)
"""
type NewsCategory implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): NewsCategoryLinkingCollections
  title(locale: String): String
  slug(locale: String): String
}

type NewsCategoryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [NewsCategory]!
}

input NewsCategoryFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  OR: [NewsCategoryFilter]
  AND: [NewsCategoryFilter]
}

type NewsCategoryLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
  newsCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): NewsCollection
}

enum NewsCategoryOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type NewsCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [News]!
}

type NewsContent {
  json: JSON!
  links: NewsContentLinks!
}

type NewsContentAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type NewsContentEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type NewsContentLinks {
  entries: NewsContentEntries!
  assets: NewsContentAssets!
}

input NewsFilter {
  category: cfNewsCategoryNestedFilter
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  date_exists: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime]
  date_not_in: [DateTime]
  date_gt: DateTime
  date_gte: DateTime
  date_lt: DateTime
  date_lte: DateTime
  category_exists: Boolean
  content_exists: Boolean
  content_contains: String
  content_not_contains: String
  OR: [NewsFilter]
  AND: [NewsFilter]
}

type NewsLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
  homeCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): HomeCollection
}

enum NewsOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  date_ASC
  date_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/pdt7v3ruuhi4/content_types/product)
"""
type Product implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): ProductLinkingCollections
  title(locale: String): String
  slug(locale: String): String
  date(locale: String): DateTime
  description(locale: String): String
  imageCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): AssetCollection
}

type ProductCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Product]!
}

input ProductFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  date_exists: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime]
  date_not_in: [DateTime]
  date_gt: DateTime
  date_gte: DateTime
  date_lt: DateTime
  date_lte: DateTime
  description_exists: Boolean
  description: String
  description_not: String
  description_in: [String]
  description_not_in: [String]
  description_contains: String
  description_not_contains: String
  imageCollection_exists: Boolean
  OR: [ProductFilter]
  AND: [ProductFilter]
}

type ProductLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

enum ProductOrder {
  title_ASC
  title_DESC
  slug_ASC
  slug_DESC
  date_ASC
  date_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
The 'Quality' type represents quality as whole numeric values between `1` and `100`.
"""
scalar Quality

type Query {
  asset(id: String!, locale: String, preview: Boolean): Asset
  assetCollection(
    limit: Int = 100
    locale: String
    order: [AssetOrder]
    preview: Boolean
    skip: Int = 0
    where: AssetFilter
  ): AssetCollection
  category(id: String!, preview: Boolean, locale: String): Category
  categoryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: CategoryFilter
    order: [CategoryOrder]
  ): CategoryCollection
  customOrder(id: String!, preview: Boolean, locale: String): CustomOrder
  customOrderCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: CustomOrderFilter
    order: [CustomOrderOrder]
  ): CustomOrderCollection
  entryCollection(
    limit: Int = 100
    locale: String
    order: [EntryOrder]
    preview: Boolean
    skip: Int = 0
    where: EntryFilter
  ): EntryCollection
  footer(id: String!, preview: Boolean, locale: String): Footer
  footerCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: FooterFilter
    order: [FooterOrder]
  ): FooterCollection
  hauteCouture(id: String!, preview: Boolean, locale: String): HauteCouture
  hauteCoutureCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: HauteCoutureFilter
    order: [HauteCoutureOrder]
  ): HauteCoutureCollection
  home(id: String!, locale: String, preview: Boolean): Home
  homeCollection(
    limit: Int = 100
    locale: String
    order: [HomeOrder]
    preview: Boolean
    skip: Int = 0
    where: HomeFilter
  ): HomeCollection
  navigation(id: String!, locale: String, preview: Boolean): Navigation
  navigationCollection(
    limit: Int = 100
    locale: String
    order: [NavigationOrder]
    preview: Boolean
    skip: Int = 0
    where: NavigationFilter
  ): NavigationCollection
  news(id: String!, preview: Boolean, locale: String): News
  newsCategory(id: String!, preview: Boolean, locale: String): NewsCategory
  newsCategoryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: NewsCategoryFilter
    order: [NewsCategoryOrder]
  ): NewsCategoryCollection
  newsCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: NewsFilter
    order: [NewsOrder]
  ): NewsCollection
  product(id: String!, preview: Boolean, locale: String): Product
  productCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: ProductFilter
    order: [ProductOrder]
  ): ProductCollection
  recruiting(id: String!, preview: Boolean, locale: String): Recruiting
  recruitingCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: RecruitingFilter
    order: [RecruitingOrder]
  ): RecruitingCollection
  staffNote(id: String!, preview: Boolean, locale: String): StaffNote
  staffNoteCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
    where: StaffNoteFilter
    order: [StaffNoteOrder]
  ): StaffNoteCollection
}

"""
[See type definition](https://app.contentful.com/spaces/8z7mw5knx30w/content_types/recruiting)
"""
type Recruiting implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): RecruitingLinkingCollections
  slug(locale: String): String
  title(locale: String): String
  formLabel(locale: String): String
  formUrl(locale: String): String
  content(locale: String): RecruitingContent
  notes(locale: String): RecruitingNotes
}

type RecruitingCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Recruiting]!
}

type RecruitingContent {
  json: JSON!
  links: RecruitingContentLinks!
}

type RecruitingContentAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type RecruitingContentEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type RecruitingContentLinks {
  entries: RecruitingContentEntries!
  assets: RecruitingContentAssets!
}

input RecruitingFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  formLabel_exists: Boolean
  formLabel: String
  formLabel_not: String
  formLabel_in: [String]
  formLabel_not_in: [String]
  formLabel_contains: String
  formLabel_not_contains: String
  formUrl_exists: Boolean
  formUrl: String
  formUrl_not: String
  formUrl_in: [String]
  formUrl_not_in: [String]
  formUrl_contains: String
  formUrl_not_contains: String
  content_exists: Boolean
  content_contains: String
  content_not_contains: String
  notes_exists: Boolean
  notes_contains: String
  notes_not_contains: String
  OR: [RecruitingFilter]
  AND: [RecruitingFilter]
}

type RecruitingLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

type RecruitingNotes {
  json: JSON!
  links: RecruitingNotesLinks!
}

type RecruitingNotesAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type RecruitingNotesEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type RecruitingNotesLinks {
  entries: RecruitingNotesEntries!
  assets: RecruitingNotesAssets!
}

enum RecruitingOrder {
  slug_ASC
  slug_DESC
  title_ASC
  title_DESC
  formLabel_ASC
  formLabel_DESC
  formUrl_ASC
  formUrl_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

"""
[See type definition](https://app.contentful.com/spaces/8z7mw5knx30w/content_types/staffNote)
"""
type StaffNote implements Entry {
  sys: Sys!
  contentfulMetadata: ContentfulMetadata!
  linkedFrom(allowedLocales: [String]): StaffNoteLinkingCollections
  slug(locale: String): String
  date(locale: String): DateTime
  title(locale: String): String
  image(preview: Boolean, locale: String): Asset
  content(locale: String): StaffNoteContent
  categoryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): StaffNoteCategoryCollection
}

type StaffNoteCategoryCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [Category]!
}

type StaffNoteCollection {
  total: Int!
  skip: Int!
  limit: Int!
  items: [StaffNote]!
}

type StaffNoteContent {
  json: JSON!
  links: StaffNoteContentLinks!
}

type StaffNoteContentAssets {
  hyperlink: [Asset]!
  block: [Asset]!
}

type StaffNoteContentEntries {
  inline: [Entry]!
  hyperlink: [Entry]!
  block: [Entry]!
}

type StaffNoteContentLinks {
  entries: StaffNoteContentEntries!
  assets: StaffNoteContentAssets!
}

input StaffNoteFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  date_exists: Boolean
  date: DateTime
  date_not: DateTime
  date_in: [DateTime]
  date_not_in: [DateTime]
  date_gt: DateTime
  date_gte: DateTime
  date_lt: DateTime
  date_lte: DateTime
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  image_exists: Boolean
  content_exists: Boolean
  content_contains: String
  content_not_contains: String
  categoryCollection_exists: Boolean
  OR: [StaffNoteFilter]
  AND: [StaffNoteFilter]
}

type StaffNoteLinkingCollections {
  entryCollection(
    skip: Int = 0
    limit: Int = 100
    preview: Boolean
    locale: String
  ): EntryCollection
}

enum StaffNoteOrder {
  slug_ASC
  slug_DESC
  date_ASC
  date_DESC
  title_ASC
  title_DESC
  sys_id_ASC
  sys_id_DESC
  sys_publishedAt_ASC
  sys_publishedAt_DESC
  sys_firstPublishedAt_ASC
  sys_firstPublishedAt_DESC
  sys_publishedVersion_ASC
  sys_publishedVersion_DESC
}

type Sys {
  environmentId: String!
  firstPublishedAt: DateTime
  id: String!
  publishedAt: DateTime
  publishedVersion: Int
  spaceId: String!
}

input SysFilter {
  firstPublishedAt: DateTime
  firstPublishedAt_exists: Boolean
  firstPublishedAt_gt: DateTime
  firstPublishedAt_gte: DateTime
  firstPublishedAt_in: [DateTime]
  firstPublishedAt_lt: DateTime
  firstPublishedAt_lte: DateTime
  firstPublishedAt_not: DateTime
  firstPublishedAt_not_in: [DateTime]
  id: String
  id_contains: String
  id_exists: Boolean
  id_in: [String]
  id_not: String
  id_not_contains: String
  id_not_in: [String]
  publishedAt: DateTime
  publishedAt_exists: Boolean
  publishedAt_gt: DateTime
  publishedAt_gte: DateTime
  publishedAt_in: [DateTime]
  publishedAt_lt: DateTime
  publishedAt_lte: DateTime
  publishedAt_not: DateTime
  publishedAt_not_in: [DateTime]
  publishedVersion: Float
  publishedVersion_exists: Boolean
  publishedVersion_gt: Float
  publishedVersion_gte: Float
  publishedVersion_in: [Float]
  publishedVersion_lt: Float
  publishedVersion_lte: Float
  publishedVersion_not: Float
  publishedVersion_not_in: [Float]
}

input cfNewsCategoryNestedFilter {
  sys: SysFilter
  contentfulMetadata: ContentfulMetadataFilter
  title_exists: Boolean
  title: String
  title_not: String
  title_in: [String]
  title_not_in: [String]
  title_contains: String
  title_not_contains: String
  slug_exists: Boolean
  slug: String
  slug_not: String
  slug_in: [String]
  slug_not_in: [String]
  slug_contains: String
  slug_not_contains: String
  OR: [cfNewsCategoryNestedFilter]
  AND: [cfNewsCategoryNestedFilter]
}
